(deffunction shape (?letter)
  (switch ?letter
    (case A then 1)
    ;(case X then 1)
    (case B then 2)
    ;(case Y then 2)
    (case C then 3)
    ;(case Z then 3)
    (default FALSE)))

(deffunction defeats (?p1 ?p2)
  (if (and (= ?p1 1) (= ?p2 1))
    then (return 3))
  (if (and (= ?p1 1) (= ?p2 2))
    then (return 6))
  (if (and (= ?p1 1) (= ?p2 3))
    then (return 0))
  (if (and (= ?p1 2) (= ?p2 1))
    then (return 0))
  (if (and (= ?p1 2) (= ?p2 2))
    then (return 3))
  (if (and (= ?p1 2) (= ?p2 3))
    then (return 6))
  (if (and (= ?p1 3) (= ?p2 1))
    then (return 6))
  (if (and (= ?p1 3) (= ?p2 2))
    then (return 0))
  (if (and (= ?p1 3) (= ?p2 3))
    then (return 3))
  FALSE)

(deffunction score (?p1 ?p2)
  (+ (shape ?p2) (defeats (shape ?p1) (shape ?p2))))

(deffunction choose (?p1 ?p2)
  (if (and (eq ?p1 A) (eq ?p2 X))
    then (return C))
  (if (and (eq ?p1 A) (eq ?p2 Y))
    then (return A))
  (if (and (eq ?p1 A) (eq ?p2 Z))
    then (return B))
  (if (and (eq ?p1 B) (eq ?p2 X))
    then (return A))
  (if (and (eq ?p1 B) (eq ?p2 Y))
    then (return B))
  (if (and (eq ?p1 B) (eq ?p2 Z))
    then (return C))
  (if (and (eq ?p1 C) (eq ?p2 X))
    then (return B))
  (if (and (eq ?p1 C) (eq ?p2 Y))
    then (return C))
  (if (and (eq ?p1 C) (eq ?p2 Z))
    then (return A))
  FALSE)

(deffunction main ()
  (open "input.txt" myinput)
  (bind ?tot 0)
  (while TRUE do
    (bind ?p1 (read myinput))
    (bind ?p2 (read myinput))
    (if (eq ?p1 EOF)
      then (break))
    (bind ?p2 (choose ?p1 ?p2))
    (bind ?score (score ?p1 ?p2))
    (bind ?tot (+ ?score ?tot)))
  (printout t ?tot crlf)
  (close myinput))
